
# This file is automatically loaded when a non-login-shell is launched.
# By default linux is launching a non-login-shell when terminal is opened.

#==============================================================================
#                           source other dotfiles
#==============================================================================

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi


# Source aliases definitions
if [ -e ~/.aliases ]; then
    echo source ~/.aliases...
	source ~/.aliases
fi


# Source launchers definitions
if [ -e ~/.launchers ]; then
    echo source ~/.launchers...
	source ~/.launchers
fi


#==============================================================================
#                                other config
#==============================================================================

# determine which OS is running, "Linux" for linux and "Darwin" for macOS
os=`uname -s`

# let tmux start automatically with shell
# this is very problematic - this breaks login!!!!!!!
#if command -v tmux>/dev/null; then
#  [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && exec tmux
#fi

# adding ~/MyLinuxConfig/scripts and ~/Programs/anaconda2 to $PATH
if [[ $USER == ybettan ]]; then
    PATH+=":/home/ybettan/MyLinuxConfig/scripts";
    PATH+=":/home/ybettan/Programs/anaconda2/bin";
    PATH+=":/usr/local/bin";
    [[ $os == "Darwin" ]] && PATH+=":/home/.cargo/bin"; # needed for alacritty terminal
elif [[ $USER == fedora ]]; then
    PATH+=":/home/fedora/MyLinuxConfig/scripts";
elif [[ $USER == fedora_test ]]; then
    PATH+=":/home/fedora_test/MyLinuxConfig/scripts";
elif [[ $USER == ubuntu ]]; then
    PATH+=":/home/ubuntu/MyLinuxConfig/scripts";
fi

# show the branch name when the current repo is gitted
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
if [[ $USER == ybettan ]]; then
    # set user name to purple on my machine (1;35)
    export PS1="\[\033[1;35m\]\u\[\033[0;37m\]@\h \[\033[32m\]\W\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
else    
    # set user name to yellow on VMs (1;33)
    export PS1="\[\033[1;33m\]\u\[\033[0;37m\]@\h \[\033[32m\]\W\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
fi

# repair command not found bug (get stuck and need to be killed)
unset command_not_found_handle

